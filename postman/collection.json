{
  "info": {
    "_postman_id": "blogposts-api-collection",
    "name": "BlogPosts API",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{jwt_token}}",
        "type": "string"
      }
    ]
  },
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "exec": [
          "if (!pm.environment.get(\"base_url\")) {",
          "    pm.environment.set(\"base_url\", \"http://localhost:5000\");",
          "}"
        ],
        "type": "text/javascript"
      }
    }
  ],
  "item": [
    {
      "name": "Register User",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "// Save JWT token if registration successful",
              "if (pm.response.code === 200) {",
              "    const response = pm.response.json();",
              "    pm.environment.set(\"jwt_token\", response.token);",
              "    pm.environment.set(\"user_id\", response.user.id);",
              "    pm.environment.set(\"user_email\", response.user.email);",
              "    console.log(\"User registered successfully. Token saved.\");",
              "} else {",
              "    console.log(\"Registration failed:\", pm.response.text());",
              "}"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n    \"email\": \"mark@gmail.com\",\n    \"password\": \"password123\"\n}"
        },
        "url": {
          "raw": "{{base_url}}/api/auth/register",
          "host": [
            "{{base_url}}"
          ],
          "path": [
            "api",
            "auth",
            "register"
          ]
        }
      },
      "response": []
    },
    {
      "name": "Login User",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "if (pm.response.code === 200) {",
              "    const response = pm.response.json();",
              "    pm.environment.set(\"jwt_token\", response.token);",
              "    pm.environment.set(\"user_id\", response.user.id);",
              "    pm.environment.set(\"user_email\", response.user.email);",
              "    console.log(\"Login successful. Token saved.\");",
              "} else {",
              "    console.log(\"Login failed:\", pm.response.text());",
              "}"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n    \"email\": \"mark@gmail.com\",\n    \"password\": \"password123\"\n}"
        },
        "url": {
          "raw": "{{base_url}}/api/auth/login",
          "host": [
            "{{base_url}}"
          ],
          "path": [
            "api",
            "auth",
            "login"
          ]
        }
      },
      "response": []
    },
    {
      "name": "Create Blog Post",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "if (pm.response.code === 201) {",
              "    const response = pm.response.json();",
              "    pm.environment.set(\"post_id\", response._id);",
              "    console.log(\"Post created successfully. ID saved:\", response._id);",
              "} else {",
              "    console.log(\"Failed to create post:\", pm.response.text());",
              "}"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n    \"title\": \"Blog Post\",\n    \"content\": \"Content of my blog post.\",\n    \"author\": \"Mark\",\n    \"tags\": [\"webdev\", \"api\", \"tutorial\"],\n    \"isPublished\": true\n}"
        },
        "url": {
          "raw": "{{base_url}}/api/posts",
          "host": [
            "{{base_url}}"
          ],
          "path": [
            "api",
            "posts"
          ]
        }
      },
      "response": []
    },
    {
      "name": "Update User",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "if (pm.response.code === 200) {",
              "    const response = pm.response.json();",
              "    pm.environment.set(\"jwt_token\", response.token);",
              "    pm.environment.set(\"user_email\", response.user.email);",
              "    console.log(\"User updated successfully. New token saved.\");",
              "} else {",
              "    console.log(\"Update failed:\", pm.response.text());",
              "}"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "PUT",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n    \"email\": \"updated@example.com\",\n    \"password\": \"newpassword123\"\n}"
        },
        "url": {
          "raw": "{{base_url}}/api/auth/update",
          "host": [
            "{{base_url}}"
          ],
          "path": [
            "api",
            "auth",
            "update"
          ]
        }
      },
      "response": []
    },
    {
      "name": "Update Blog Post",
      "request": {
        "method": "PUT",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n    \"title\": \"My Updated Blog Post\",\n    \"content\": \"This is the updated content of my blog post.\",\n    \"author\": \"Mark\",\n    \"tags\": [\"webdev\", \"api\", \"tutorial\", \"updated\"],\n    \"isPublished\": true\n}"
        },
        "url": {
          "raw": "{{base_url}}/api/posts/{{post_id}}",
          "host": [
            "{{base_url}}"
          ],
          "path": [
            "api",
            "posts",
            "{{post_id}}"
          ]
        }
      },
      "response": []
    },
    {
      "name": "Get Current User",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{base_url}}/api/auth/me",
          "host": [
            "{{base_url}}"
          ],
          "path": [
            "api",
            "auth",
            "me"
          ]
        }
      },
      "response": []
    },
    {
      "name": "Get All User Posts",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{base_url}}/api/posts",
          "host": [
            "{{base_url}}"
          ],
          "path": [
            "api",
            "posts"
          ]
        }
      },
      "response": []
    },
    {
      "name": "Get Post by ID",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{base_url}}/api/posts/{{post_id}}",
          "host": [
            "{{base_url}}"
          ],
          "path": [
            "api",
            "posts",
            "{{post_id}}"
          ]
        }
      },
      "response": []
    },
    {
      "name": "Get All Published Posts",
      "request": {
        "auth": {
          "type": "noauth"
        },
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{base_url}}/api/public/posts",
          "host": [
            "{{base_url}}"
          ],
          "path": [
            "api",
            "public",
            "posts"
          ]
        }
      },
      "response": []
    },
    {
      "name": "Get Public Post by ID",
      "request": {
        "auth": {
          "type": "noauth"
        },
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{base_url}}/api/public/posts/{{post_id}}",
          "host": [
            "{{base_url}}"
          ],
          "path": [
            "api",
            "public",
            "posts",
            "{{post_id}}"
          ]
        }
      },
      "response": []
    },
    {
      "name": "Delete Blog Post",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "if (pm.response.code === 204) {",
              "    console.log(\"Post deleted successfully\");",
              "    pm.environment.unset(\"post_id\");",
              "} else {",
              "    console.log(\"Failed to delete post:\", pm.response.text());",
              "}"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "DELETE",
        "header": [],
        "url": {
          "raw": "{{base_url}}/api/posts/{{post_id}}",
          "host": [
            "{{base_url}}"
          ],
          "path": [
            "api",
            "posts",
            "{{post_id}}"
          ]
        }
      },
      "response": []
    },
    {
      "name": "Delete User",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "if (pm.response.code === 200) {",
              "    pm.environment.unset(\"jwt_token\");",
              "    pm.environment.unset(\"user_id\");",
              "    pm.environment.unset(\"user_email\");",
              "    console.log(\"User deleted successfully. Tokens cleared.\");",
              "} else {",
              "    console.log(\"Delete failed:\", pm.response.text());",
              "}"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "DELETE",
        "header": [],
        "url": {
          "raw": "{{base_url}}/api/auth/delete",
          "host": [
            "{{base_url}}"
          ],
          "path": [
            "api",
            "auth",
            "delete"
          ]
        }
      },
      "response": []
    }
  ],
  "variable": [
    {
      "key": "base_url",
      "value": "http://localhost:5000",
      "type": "string"
    }
  ]
}